"""
Django settings for askcompany project.

Generated by 'django-admin startproject' using Django 3.0.11.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '9sd5+@b9q^zmoij55iz-2j9la_65hd(d#w80qw+p%k4gxof21^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # third apps
    'django_extensions',    # django-extensions 설치 후 설정하기
    'debug_toolbar',    # django-debug-toolbar 설치 후 설정하기
    'bootstrap4',      # django-bootstrap4 설치 후 설정하기
    # locals apps
    'blog1',    # 추가된 장고앱
    'instagram',
    'accounts',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',   # django-debug-toolbar 설치 후 설정하기
]

ROOT_URLCONF = 'askcompany.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            # django.DjangoTemplates에 Template Loader가 있음
            # File System Template Loader와 App Directory Template Loader가 있음
            # App Directory Template Loader : 앱 디렉토리 안의 templates디렉토리 안에서 템플릿 파일을 찾음
            # File System Template Loader : setting의 DIRS에서 정한 경로에서 템플릿 파일을 찾음
            os.path.join(BASE_DIR, 'askcompany', 'templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'askcompany.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'askcompany', 'static')
]

MEDIA_URL = '/media/'   # 파일(이미지)의 URL접근 시에 사용
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')    # 파일의 저장에 사용

# 보안상 아무나 볼 수 없게 설정 필요
INTERNAL_IPS = ['127.0.0.1']

from django.contrib.messages import constants as messages_contants

MESSAGE_TAGS = {
    messages_contants.DEBUG: 'secondary',
    messages_contants.ERROR: 'danger',
}

# 메시지 레벨 변경하기(메시지 노출 최소 레벨)
# INFO가 디폴트
MESSAGE_LEVEL = messages_contants.DEBUG

from django.urls import reverse_lazy

# 로그아웃시의 이동 경로
LOGOUT_REDIRECT_URL = reverse_lazy('login')